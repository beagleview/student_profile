# Generated by Django 5.2.5 on 2025-08-09 11:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('students', '0002_student_student_id_student_student_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='GardnerTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linguistic_score', models.IntegerField(default=0, help_text='ความสามารถด้านภาษา')),
                ('logical_score', models.IntegerField(default=0, help_text='ความสามารถด้านคณิตศาสตร์-ตรรกะ')),
                ('spatial_score', models.IntegerField(default=0, help_text='ความสามารถด้านมิติสัมพันธ์')),
                ('musical_score', models.IntegerField(default=0, help_text='ความสามารถด้านดนตรี')),
                ('bodily_score', models.IntegerField(default=0, help_text='ความสามารถด้านกายเคลื่อนไหว')),
                ('interpersonal_score', models.IntegerField(default=0, help_text='ความสามารถด้านมนุษยสัมพันธ์')),
                ('intrapersonal_score', models.IntegerField(default=0, help_text='ความสามารถด้านเข้าใจตนเอง')),
                ('naturalist_score', models.IntegerField(default=0, help_text='ความสามารถด้านธรรมชาติวิทยา')),
                ('primary_intelligence', models.CharField(choices=[('linguistic', 'ภาษาศาสตร์ (Linguistic)'), ('logical', 'คณิตศาสตร์-ตรรกะ (Logical-Mathematical)'), ('spatial', 'มิติสัมพันธ์ (Spatial)'), ('musical', 'ดนตรี (Musical)'), ('bodily', 'กายเคลื่อนไหว (Bodily-Kinesthetic)'), ('interpersonal', 'มนุษยสัมพันธ์ (Interpersonal)'), ('intrapersonal', 'เข้าใจตนเอง (Intrapersonal)'), ('naturalist', 'ธรรมชาติวิทยา (Naturalist)')], max_length=20)),
                ('secondary_intelligence', models.CharField(blank=True, choices=[('linguistic', 'ภาษาศาสตร์ (Linguistic)'), ('logical', 'คณิตศาสตร์-ตรรกะ (Logical-Mathematical)'), ('spatial', 'มิติสัมพันธ์ (Spatial)'), ('musical', 'ดนตรี (Musical)'), ('bodily', 'กายเคลื่อนไหว (Bodily-Kinesthetic)'), ('interpersonal', 'มนุษยสัมพันธ์ (Interpersonal)'), ('intrapersonal', 'เข้าใจตนเอง (Intrapersonal)'), ('naturalist', 'ธรรมชาติวิทยา (Naturalist)')], max_length=20)),
                ('test_date', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gardner_tests', to='students.student')),
            ],
            options={
                'ordering': ['-test_date'],
            },
        ),
        migrations.CreateModel(
            name='HollandTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('realistic_score', models.IntegerField(default=0, help_text='นักสำรวจ - ชอบงานที่ใช้มือ เครื่องมือ')),
                ('investigative_score', models.IntegerField(default=0, help_text='นักวิจัย - ชอบคิด วิเคราะห์ แก้ปัญหา')),
                ('artistic_score', models.IntegerField(default=0, help_text='นักสร้างสรรค์ - ชอบสร้างสรรค์ ศิลปะ')),
                ('social_score', models.IntegerField(default=0, help_text='นักสังคม - ชอบช่วยเหลือคน สอน')),
                ('enterprising_score', models.IntegerField(default=0, help_text='นักผจญภัย - ชอบนำ จัดการ ขาย')),
                ('conventional_score', models.IntegerField(default=0, help_text='นักระบบ - ชอบความเป็นระเบียบ')),
                ('primary_type', models.CharField(choices=[('R', 'Realistic (นักสำรวจ)'), ('I', 'Investigative (นักวิจัย)'), ('A', 'Artistic (นักสร้างสรรค์)'), ('S', 'Social (นักสังคม)'), ('E', 'Enterprising (นักผจญภัย)'), ('C', 'Conventional (นักระบบ)')], max_length=1)),
                ('secondary_type', models.CharField(blank=True, choices=[('R', 'Realistic (นักสำรวจ)'), ('I', 'Investigative (นักวิจัย)'), ('A', 'Artistic (นักสร้างสรรค์)'), ('S', 'Social (นักสังคม)'), ('E', 'Enterprising (นักผจญภัย)'), ('C', 'Conventional (นักระบบ)')], max_length=1)),
                ('test_date', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holland_tests', to='students.student')),
            ],
            options={
                'ordering': ['-test_date'],
            },
        ),
    ]
